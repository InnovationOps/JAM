---
swagger: "2.0"
info:
  title: "BrightIdea API"
  version: "Beta-1.0.0.5"
  description: >-
    Brightidea API is a RESTful interface to features provided by Brightidea web application. Prior to making any requests, read the list below on requirements and behaviors:
    
      - Authentication is required prior to making API requests for most cases. See Authentication for information on the process.
      - To make a request, Access Token and Host Name are the two basic components needed.
      - All requests must be encryptedand use HTTPS protocol
      - Response is in JSON. You have the option to receive in XML by passing the proper parameter on each request.
      - All timestamps included in responses are in Eastern Standard Time.
      - All requests are subject to rate limiting. Exceeding any rate limits will result in error response. 
      - All parameter value must be URL encoded.
      
        
      Request content type:
      
      
        application/x-www-form-urlencoded
    

    There are a few basic url structures to Brightidea API requests:
    
      - https://{host_name}/api3/{object}
      - https://{host_name}/api3/{object}/{id}
      - https://{host_name}/api3/widget/{object}
    
    Access Token: 
      
      A valid access token must be present for most cases. Access token is obtained at the end of the Authentication process. There 2 ways access token can be passed in the API request.
      
      Example:
      
        MyOrg.brightidea.com
      

    Header:
      
      When access token is passed in header, it must use the attribute name "Authorization". Value must be prefixed with the string "Bearer", follow by a space, then the token value
        
      Example:
        
        Authorization=Bearer 85f7b2462570acdde9a458ba6495b8763dcd040c.
        
    
      
      When passed as a POST or GET parameter, it must use the attribute name "access_token". Value is the token string. 
        
      Example:
      
        access_token=85f7b2462570acdde9a458ba6495b8763dcd040c
        
    
    Parameter requirements are different for each API function. Visit the Parameter section of each object page to understand what it takes to make a request.

host: "amgen.brightidea.com"
basePath: "/api3"
tags:
- name: Member
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/member' target='_blank'> Get Member Data</a>"
- name: ProfileImage 
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/ProfileImage' target='_blank'> Get ProfileImage Data</a>"
- name: Comment
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/comment' target='_blank'> Get Comments</a>"
- name: CommentVote
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/CommentVote' target='_blank'> Get data of one idea object</a>"
- name: Idea
  description:  
      "<a href='https://developer.brightidea.com/_documentation/api/idea' target='_blank'> Get data of one idea object</a>"
- name: IdeaAttachment 
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/IdeaAttachment' target='_blank'> Get data of one idea object</a>"
- name: Blog
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/Blog' target='_blank'> Get data of one idea object</a>"
- name: BlogComment
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/BlogComment' target='_blank'> Get data of one idea object</a>"
- name: Tag
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/Tag' target='_blank'> Get data of one idea object</a>"
- name: Vote
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/Vote' target='_blank'> Get data of one idea object</a>"
- name: ChipVote
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/ChipVote' target='_blank'> Get data of one idea object</a>"
- name: Activity
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/Activity' target='_blank'> Get Activity Data</a>"
- name: Status
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/Status' target='_blank'> Get Status Data</a>"
- name: Category
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/Category' target='_blank'> Get Category Data</a>"
- name: Update
  description: 
      "<a href='https://developer.brightidea.com/_documentation/api/Update' target='_blank'> Get Update</a>"
schemes:
- "https"
paths:
  /Member:
    get:
      tags:
      - "Member"
      summary: "member()"
      operationId: "member"
      parameters:
      - name: "id"
        in: "query"
        description: "Filter return by member ID"
        required: false
        type: "string"
      - name: "email"
        in: "query"
        description: "Filter return by member email address" 
        required: false
        type: "string"
      - name: "screen_name"
        in: "query"
        description: "Filter return by member screen name"
        required: false
        type: "string"
      - name: "last_name"
        in: "query"
        description: "Filter return by member last name"
        required: false
        type: "string"
      - name: "job_title"
        in: "query"
        description: "Filter return by member job title"
        required: false
        type: "string"
      - name: "address"
        in: "query"
        description: "Filter return by member address"
        required: false
        type: "string"
      - name: "phone"
        in: "query"
        description: "Filter return by member phone info"
        required: false
        type: "string"
      - name: "mobile_phone"
        in: "query"
        description: "Filter return by member mobile phone info"
        required: false
        type: "string"
      - name: "external_user_id"
        in: "query"
        description: "Filter return by member employee ID info"
        required: false
        type: "string"
      - name: "date_created"
        in: "query"
        description: "Filter return by member created date"
        required: false
        type: "string"
      - name: "date_modified"
        in: "query"
        description: "Filter return by member last modified date"
        required: false
        type: "string"
      - name: "active"
        in: "query"
        description: "Filter return by member active/inactive state"
        required: false
        type: "string"
      - name: "group_id"
        in: "query"
        description: "Filter return by the ID of a group member are assigned to"
        required: false
        type: "string"
      - name: "have_visited"
        in: "query"
        description: "Filter return by the ID of a campaign members are visited"
        required: false
        type: "string"
      - name: "have_access"
        in: "query"
        description: "Filter return by the ID of a campaign members have access to"
        required: false
        type: "string"
      - name: "page_size"
        in: "query"
        description: "Specifies number of records returns per page. Default: 20. Minimum: 1. Maximum: 100"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Specifies which page of records to return. Default: 1. Minimum: 1. Maximum: {page_count}"
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "A SQL style string that specifies the order the records should return in"
        required: false
        type: "string"
      - name: "with"
        in: "query"
        description: "Returns sub-object or count of sub-objects relating to the member. If sub-object is requested, response will return the first 20 records"
        required: false
        type: "string"
      - name: "format"
        in: "query"
        description: "Specifies returned data format"
        required: false
        type: "string"      
      responses:
        200:
          description: "Status OK"
        400:
          description: "Server Rejection"
        401:
          description: "Missing parameter. client_id is Required"  
        403:
          description: "403 Forbidden"
      security:
      - api_key: []
      - api_token: []  
    post:
      tags:
      - "Member"
      summary: "member()"
      operationId: "member"
      parameters:
      - name: "email"
        in: "query"
        description: "Filter return by member email address"
        required: false
        type: "string"
      - name: "screen_name"
        in: "query"
        description: "Filter return by member screen name"
        required: false
        type: "string"
      - name: "last_name"
        in: "query"
        description: "Filter return by member last name"
        required: false
        type: "string"
      - name: "first_name"
        in: "query"
        description: "This is the first name of the member"
        required: false
        type: "string"
      - name: "job_title"
        in: "query"
        description: "Filter return by member job title"
        required: false
        type: "string"
      - name: "address"
        in: "query"
        description: "Filter return by member address"
        required: false
        type: "string"
      - name: "phone"
        in: "query"
        description: "Filter return by member phone info"
        required: false
        type: "string"
      - name: "mobile_phone"
        in: "query"
        description: "Filter return by member mobile phone info"
        required: false
        type: "string"
      - name: "external_user_id"
        in: "query"
        description: "Filter return by member employee ID info"
        required: false
        type: "string"
      - name: "skill"
        in: "query"
        description: "This is the skill info of the member"
        required: false
        type: "string"
      - name: "work_history"
        in: "query"
        description: "This is the work history info of the membe"
        required: false
        type: "string"
      - name: "photo"
        in: "query"
        description: "This is the profile picture of the member"
        required: false
        type: "string"
      - name: "format"
        in: "query"
        description: "Specifies returned data format"
        required: false
        type: "string"                                             
      responses:
        200:
          description: "Status OK"
        400:
          description: "Server Rejection"
        401:
          description: "Missing parameter. client_id is Required"  
        403:
          description: "403 Forbidden"
      security:
      - api_key: []
      - api_token: []
    put:
      tags:
      - "Member"
      summary: "member()"
      operationId: "member"
      parameters:
      - name: "password"
        in: "query"
        description: "This is the password of the member"
        required: false
        type: "string"
      - name: "screen_name"
        in: "query"
        description: "Filter return by member screen name"
        required: false
        type: "string"
      - name: "last_name"
        in: "query"
        description: "Filter return by member last name"
        required: false
        type: "string"
      - name: "first_name"
        in: "query"
        description: "This is the first name of the member" 
        required: false
        type: "string"
      - name: "job_title"
        in: "query"
        description: "Filter return by member job title"
        required: false
        type: "string"
      - name: "address"
        in: "query"
        description: "Filter return by member address"
        required: false
        type: "string"
      - name: "phone"
        in: "query"
        description: "Filter return by member phone info"
        required: false
        type: "string"
      - name: "mobile_phone"
        in: "query"
        description: "Filter return by member mobile phone info"
        required: false
        type: "string"
      - name: "external_user_id"
        in: "query"
        description: "Filter return by member employee ID info"
        required: false
        type: "string"
      - name: "skill"
        in: "query"
        description: 
            "This is the skill info of the member"
        required: false
        type: "string"
      - name: "work_history"
        in: "query"
        description: "This is the work history info of the membe"
        required: false
        type: "string"
      - name: "photo"
        in: "query"
        description: "This is the profile picture of the member"
        required: false
        type: "string"
      - name: "format"
        in: "query"
        description: "Specifies returned data format"
        required: false
        type: "string"                                             
      responses:
        200:
          description: "Status OK"
        400:
          description: "Server Rejection"
        401:
          description: "Missing parameter. client_id is Required"  
        403:
          description: "403 Forbidden"
      security:
      - api_key: []
      - api_token: [] 
  /Campaign: 
    get:
      tags:
      - "Campaign"
      summary: "campaign()"
      description: "Returns many five-minute scores for each location, and each department\
        \ within a location."
      operationId: "campaign"
      parameters:
      - name: "$format"
        in: "header"
        description: "Use $format to force the returned data to be in XML or JSON\
          \ format"
        required: false
        type: "string"
      - name: "$top"
        in: "header"
        description: "Use $top by returning the first few entries sequentially"
        required: false
        type: "string"
      - name: "$select"
        in: "header"
        description: "Use $select o return several columns, list them separated by\
          \ a comma"
        required: false
        type: "string"
      - name: "$filter"
        in: "header"
        description: "Use $filter to insert conditions which narrow down the output\
          \ data returned"
        required: false
        type: "string"
      responses:
        200:
          description: "Status OK"
        400:
          description: "Server rejection"
        403:
          description: "403 Forbidden"
      security:
      - api_key: []
      - api_token: []
 securityDefinitions:
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
  api_token:
    type: "apiKey"
    name: "token"
    in: "query"
definitions: {}
x-hasEquivalentPaths: true